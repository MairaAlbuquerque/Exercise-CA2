class Products:
    def __init__(self, description, seller, price, curr):
        self.description = description
        self.seller = seller
        self.price = price
        self.curr = curr
            
        
prices = {1:"EUR", 1.23:"USD", 1.56:"CAD"}

class Basket:
    def __init__(self):
        self.__shoppingBasket = {}
        
    def add_item(self, sku, qty):
        self.__shoppingBasket[sku]=self.getBalance_items(sku)+qty
        
    def remove_item(self, sku, qty):
        self.__shoppingBasket[sku]=self.getBalance_items(sku)-qty
        
    def getBalance_items(self, sku):
        if sku not in self.__shoppingBasket:
            return 0
        return self.__shoppingBasket[sku]
    
    def getValue(self, sku):    #not multiplies by prices(rates)
        if sku not in self.__shoppingBasket:
            return 0
        return self.__shoppingBasket[sku]*test.price[sku]
        
        
#Testing:
       
Products = [Product1, Product2, Product3, Product4]
Product1=test.init("suitcase","Arnotts",23,"EUR")
Product2=test.init("pillows","Arnotts",34,"EUR")
Product3=test.init("duvet", "Dunnes", 30, "EUR")
Product4=test.init("coverduvet", "Amazon", 20, "USD")
        
MyCase= Basket()
MyCase.add_item("suitcase", 1)
MyCase.add_item("pillows", 2)
MyCase.add_item("duvet", 1)

print(MyCase.getBalance_items("suitcase"))

print(MyCase.getValue("suitcase"))
print(MyCase.getValue("pillows"))
